//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AJNMRecetasEntities : DbContext
    {
        public AJNMRecetasEntities()
            : base("name=AJNMRecetasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Ingrediente> Ingredientes { get; set; }
        public virtual DbSet<Pai> Pais { get; set; }
        public virtual DbSet<Receta> Recetas { get; set; }
        public virtual DbSet<Restaurante> Restaurantes { get; set; }
    
        public virtual ObjectResult<CategoriaGetAll_Result> CategoriaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriaGetAll_Result>("CategoriaGetAll");
        }
    
        public virtual int IngredienteDelete(Nullable<int> idIngrediente)
        {
            var idIngredienteParameter = idIngrediente.HasValue ?
                new ObjectParameter("IdIngrediente", idIngrediente) :
                new ObjectParameter("IdIngrediente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngredienteDelete", idIngredienteParameter);
        }
    
        public virtual ObjectResult<IngredienteGetAll_Result> IngredienteGetAll(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IngredienteGetAll_Result>("IngredienteGetAll", nombreParameter);
        }
    
        public virtual ObjectResult<IngredienteGetById_Result> IngredienteGetById(Nullable<int> idIngrediente)
        {
            var idIngredienteParameter = idIngrediente.HasValue ?
                new ObjectParameter("IdIngrediente", idIngrediente) :
                new ObjectParameter("IdIngrediente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IngredienteGetById_Result>("IngredienteGetById", idIngredienteParameter);
        }
    
        public virtual int IngredientesAdd(string nombre, Nullable<int> idPais, string imagen, Nullable<int> idCategoria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngredientesAdd", nombreParameter, idPaisParameter, imagenParameter, idCategoriaParameter);
        }
    
        public virtual int IngredienteUpdate(Nullable<int> idIngrediente, string nombre, Nullable<int> idPais, string imagen, Nullable<int> idCategoria)
        {
            var idIngredienteParameter = idIngrediente.HasValue ?
                new ObjectParameter("IdIngrediente", idIngrediente) :
                new ObjectParameter("IdIngrediente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngredienteUpdate", idIngredienteParameter, nombreParameter, idPaisParameter, imagenParameter, idCategoriaParameter);
        }
    
        public virtual ObjectResult<PaisGetAll_Result> PaisGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaisGetAll_Result>("PaisGetAll");
        }
    
        public virtual int RecetaAdd(string nombre, string descripcion, Nullable<int> idPais, string imagen, Nullable<int> porcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var porcionParameter = porcion.HasValue ?
                new ObjectParameter("Porcion", porcion) :
                new ObjectParameter("Porcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecetaAdd", nombreParameter, descripcionParameter, idPaisParameter, imagenParameter, porcionParameter);
        }
    
        public virtual int RecetaDelete(Nullable<int> idReceta)
        {
            var idRecetaParameter = idReceta.HasValue ?
                new ObjectParameter("IdReceta", idReceta) :
                new ObjectParameter("IdReceta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecetaDelete", idRecetaParameter);
        }
    
        public virtual ObjectResult<RecetaGetAll_Result> RecetaGetAll(string nombre, string pais)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecetaGetAll_Result>("RecetaGetAll", nombreParameter, paisParameter);
        }
    
        public virtual ObjectResult<RecetaGetById_Result> RecetaGetById(Nullable<int> idReceta)
        {
            var idRecetaParameter = idReceta.HasValue ?
                new ObjectParameter("IdReceta", idReceta) :
                new ObjectParameter("IdReceta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecetaGetById_Result>("RecetaGetById", idRecetaParameter);
        }
    
        public virtual ObjectResult<RecetaIngredientesGetAll_Result> RecetaIngredientesGetAll(Nullable<int> idReceta)
        {
            var idRecetaParameter = idReceta.HasValue ?
                new ObjectParameter("IdReceta", idReceta) :
                new ObjectParameter("IdReceta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecetaIngredientesGetAll_Result>("RecetaIngredientesGetAll", idRecetaParameter);
        }
    
        public virtual int RecetaUpdate(Nullable<int> idReceta, string nombre, string descripcion, Nullable<int> idPais, string imagen, Nullable<int> porcion)
        {
            var idRecetaParameter = idReceta.HasValue ?
                new ObjectParameter("IdReceta", idReceta) :
                new ObjectParameter("IdReceta", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var porcionParameter = porcion.HasValue ?
                new ObjectParameter("Porcion", porcion) :
                new ObjectParameter("Porcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecetaUpdate", idRecetaParameter, nombreParameter, descripcionParameter, idPaisParameter, imagenParameter, porcionParameter);
        }
    
        public virtual int RestauranteAdd(string nombre, string imagen, string direccion, Nullable<int> calificacion, Nullable<int> idPais)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(int));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestauranteAdd", nombreParameter, imagenParameter, direccionParameter, calificacionParameter, idPaisParameter);
        }
    
        public virtual int RestauranteDelete(Nullable<int> idRestaurante)
        {
            var idRestauranteParameter = idRestaurante.HasValue ?
                new ObjectParameter("IdRestaurante", idRestaurante) :
                new ObjectParameter("IdRestaurante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestauranteDelete", idRestauranteParameter);
        }
    
        public virtual ObjectResult<RestauranteGetAll_Result> RestauranteGetAll(string pais, string receta, Nullable<int> calificacion)
        {
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var recetaParameter = receta != null ?
                new ObjectParameter("Receta", receta) :
                new ObjectParameter("Receta", typeof(string));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RestauranteGetAll_Result>("RestauranteGetAll", paisParameter, recetaParameter, calificacionParameter);
        }
    
        public virtual ObjectResult<RestauranteGetByID_Result> RestauranteGetByID(Nullable<int> idRestaurante)
        {
            var idRestauranteParameter = idRestaurante.HasValue ?
                new ObjectParameter("IdRestaurante", idRestaurante) :
                new ObjectParameter("IdRestaurante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RestauranteGetByID_Result>("RestauranteGetByID", idRestauranteParameter);
        }
    
        public virtual ObjectResult<RestauranteRecetaGetAll_Result> RestauranteRecetaGetAll(Nullable<int> idRestaurante)
        {
            var idRestauranteParameter = idRestaurante.HasValue ?
                new ObjectParameter("IdRestaurante", idRestaurante) :
                new ObjectParameter("IdRestaurante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RestauranteRecetaGetAll_Result>("RestauranteRecetaGetAll", idRestauranteParameter);
        }
    
        public virtual int RestauranteUpdate(Nullable<int> idRestaurante, string nombre, string imagen, string direccion, Nullable<int> calificacion, Nullable<int> idPais)
        {
            var idRestauranteParameter = idRestaurante.HasValue ?
                new ObjectParameter("IdRestaurante", idRestaurante) :
                new ObjectParameter("IdRestaurante", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(int));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestauranteUpdate", idRestauranteParameter, nombreParameter, imagenParameter, direccionParameter, calificacionParameter, idPaisParameter);
        }
    }
}
